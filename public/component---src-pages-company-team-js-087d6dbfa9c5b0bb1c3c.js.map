{"version":3,"sources":["webpack:///./src/pages/company/team.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.svg","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","Team","_ref","location","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","HeaderWrapper","styled","div","withConfig","displayName","componentId","HeaderContainer","Header","siteTitle","react_default","style","margin","gatsby_browser_entry","to","color","textDecoration","width","src","logo","alt","Archive","allMarkdownRemark","Fragment","Wrap","ArchiveList","edges","map","_ref2","node","key","frontmatter","slug","title","ItemWrap","ItemDate","date","excerpt","_1398253974","aside","span","ul","MainLayout","main","from","height","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","lang","header","web","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_3793927926","defaultProps"],"mappings":"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","file":"component---src-pages-company-team-js-087d6dbfa9c5b0bb1c3c.js","sourcesContent":["import React from 'react'\nimport Layout from '../../components/layout'\n\nconst Team = ({ location }) => (\n  <Layout location={location}>\n    <div>\n      <h1>Team</h1>\n      <p>Here is our great team</p>\n    </div>\n  </Layout>\n)\n\nexport default Team\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-7665f742d9402c726ad0cd313e098ef8.svg\";","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nimport logo from '../images/logo.svg'\n\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  /* margin-bottom: 1.45rem; */\n  img {\n    margin-bottom: 0;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0.3rem;\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          <img\n            style={{\n              width: '100px',\n            }}\n            src={logo}\n            alt=\"Level Up Tutorials Logo\"\n          />\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst POST_ARCHIVE_QUERY = graphql`\n    query BlogPostArchive {\n        allMarkdownRemark(limit: 3, sort: {\n            order: DESC,\n            fields: [frontmatter___date]\n          }) {\n        totalCount\n        edges {\n            node {\n            excerpt\n            frontmatter {\n                title\n                slug\n                date(formatString: \"MMMM DD, YY\")\n            }\n            }\n        }\n        }\n    }\n`;\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({ allMarkdownRemark })=> (\n      <>\n        <Wrap>\n            <h3>Archive</h3>\n            <ArchiveList>\n                {allMarkdownRemark.edges.map(({ node }) => (\n                    <li key={node.frontmatter.slug}>\n                    <Link to={`/posts${node.frontmatter.slug}`}>{node.frontmatter.title}</Link>\n                        <ItemWrap>\n                            <ItemDate>{node.frontmatter.date}</ItemDate>\n                            <p>{node.excerpt}</p>\n                        </ItemWrap>\n                    </li>\n                ))}\n            </ArchiveList>\n        </Wrap>\n      </>\n    )}\n  />\n)\n\n\nexport default Archive\n\nconst Wrap = styled.aside`\n    width: 300px;\n`\n\nconst ItemWrap = styled.div`\n    margin-bottom: 2rem;\n`\n\nconst ItemDate = styled.span`\n    font-size: 14px;\n    opacity: 0.5;\n`\n\nconst ArchiveList = styled.ul`\n    list-style-type: none;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport { Spring } from 'react-spring'\nimport Img from 'gatsby-image'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Archive from './archive'\nimport './layout.css'\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`\nconst from = { height: 100 }\nconst to = { height: 200 }\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        file(relativePath: { regex: \"/bg/\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: data.site.siteMetadata.description,\n            },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {/* {location.pathname === '/' && <Img fluid={data.file.childImageSharp.fluid} />} */}\n        <Spring from={location.pathname === '/' ? from : to} to={location.pathname === '/' ? to : from}>\n          {styles => (\n            <div style={{ ...styles, overflow: 'hidden' }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n        <MainLayout>\n          <div>{children}</div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}