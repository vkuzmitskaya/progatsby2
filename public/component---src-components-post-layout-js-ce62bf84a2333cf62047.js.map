{"version":3,"sources":["webpack:///./src/components/postLayout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.svg","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js"],"names":["postLayout","render","_this$props","this","props","markdownRemark","data","location","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","Component","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","HeaderWrapper","styled","div","withConfig","displayName","componentId","HeaderContainer","Header","siteTitle","react_default","style","margin","gatsby_browser_entry","to","color","textDecoration","width","src","logo","alt","Archive","allMarkdownRemark","Fragment","Wrap","ArchiveList","edges","map","_ref2","node","key","slug","ItemWrap","ItemDate","date","excerpt","_1398253974","aside","span","ul","MainLayout","main","from","height","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","lang","header","web","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_3793927926","defaultProps"],"mappings":"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","file":"component---src-components-post-layout-js-ce62bf84a2333cf62047.js","sourcesContent":["import React, { Component } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from './layout'\n\n//Static Query\n//used anywhere, doesn't accept variables, can't use context\n\n//Page query\n//must be used on pages\n\nclass postLayout extends Component {\n  render() {\n    const {\n      data: { markdownRemark },\n      location,\n    } = this.props\n    return (\n      <Layout location={location}>\n        <h1>{markdownRemark.frontmatter.title}</h1>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: markdownRemark.html,\n          }}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default postLayout\n\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        slug\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-7665f742d9402c726ad0cd313e098ef8.svg\";","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nimport logo from '../images/logo.svg'\n\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  /* margin-bottom: 1.45rem; */\n  img {\n    margin-bottom: 0;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0.3rem;\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          <img\n            style={{\n              width: '100px',\n            }}\n            src={logo}\n            alt=\"Level Up Tutorials Logo\"\n          />\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst POST_ARCHIVE_QUERY = graphql`\n    query BlogPostArchive {\n        allMarkdownRemark(limit: 3, sort: {\n            order: DESC,\n            fields: [frontmatter___date]\n          }) {\n        totalCount\n        edges {\n            node {\n            excerpt\n            frontmatter {\n                title\n                slug\n                date(formatString: \"MMMM DD, YY\")\n            }\n            }\n        }\n        }\n    }\n`;\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({ allMarkdownRemark })=> (\n      <>\n        <Wrap>\n            <h3>Archive</h3>\n            <ArchiveList>\n                {allMarkdownRemark.edges.map(({ node }) => (\n                    <li key={node.frontmatter.slug}>\n                    <Link to={`/posts${node.frontmatter.slug}`}>{node.frontmatter.title}</Link>\n                        <ItemWrap>\n                            <ItemDate>{node.frontmatter.date}</ItemDate>\n                            <p>{node.excerpt}</p>\n                        </ItemWrap>\n                    </li>\n                ))}\n            </ArchiveList>\n        </Wrap>\n      </>\n    )}\n  />\n)\n\n\nexport default Archive\n\nconst Wrap = styled.aside`\n    width: 300px;\n`\n\nconst ItemWrap = styled.div`\n    margin-bottom: 2rem;\n`\n\nconst ItemDate = styled.span`\n    font-size: 14px;\n    opacity: 0.5;\n`\n\nconst ArchiveList = styled.ul`\n    list-style-type: none;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport { Spring } from 'react-spring'\nimport Img from 'gatsby-image'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Archive from './archive'\nimport './layout.css'\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`\nconst from = { height: 100 }\nconst to = { height: 200 }\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        file(relativePath: { regex: \"/bg/\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: data.site.siteMetadata.description,\n            },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {/* {location.pathname === '/' && <Img fluid={data.file.childImageSharp.fluid} />} */}\n        <Spring from={location.pathname === '/' ? from : to} to={location.pathname === '/' ? to : from}>\n          {styles => (\n            <div style={{ ...styles, overflow: 'hidden' }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n        <MainLayout>\n          <div>{children}</div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}